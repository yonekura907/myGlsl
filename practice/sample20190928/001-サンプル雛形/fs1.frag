/**
 * フラグメントシェーダのソースコードです。
 * 冒頭に、必ず「精度修飾子」の指定が必要です。
 * 精度修飾子には lowp, mediump, highp の３種類があります。
 * 精度修飾子では文字通り精度を指定しますが、これはあくまでも「この精度で処理し
 * てほしいと GPU に伝える」という意味しかありません。実際にどのような精度で処理
 * されるのかは、GPU と、GPU のドライバ側で決定されます。
 */
precision mediump float;
/**
 * ここでは uniform 変数がひとつ、宣言されています。
 * uniform 変数とは、GPU に送られてくる「グローバル変数」のようなものです。
 * int, float, vec2 ~ vec4, mat2 ~ mat4, sampler2D などの型があります。
 */
uniform vec4 globalColor;
/**
 * 頂点シェーダと同様に、フラグメントシェーダでも必ず main 関数を定義します。
 * ここで main 関数に定義された処理が「頂点によって塗りつぶされるピクセル全て」
 * で実行されます。
 */
void main(){
    /**
     * フラグメントシェーダは、ピクセルをひとつひとつ塗りつぶしていくことが仕事
     * です。このとき、最終的に「該当するピクセルに何色を出力するか」は、以下に
     * 示すように gl_FragColor というビルトイン変数に vec4 型のデータを代入する
     * ことによって決まります。
     * ここでは uniform 変数として CPU から送られてきた globalColor をそのまま代
     * 入しているので、JavaScript で転送した色がそのままピクセルの色として使われ
     * ます。
     */
    gl_FragColor = globalColor;
}

